services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: noesis_forge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1997
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - noesis-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: noesis-documents
    ports:
      - "9000:9000"   # MinIO API
      - "9001:9001"   # MinIO Console (Web UI)
    volumes:
      - minio_data:/data
    networks:
      - noesis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket creation
  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    networks:
      - noesis-network
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to start...';
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/noesis-documents --ignore-existing;
      /usr/bin/mc policy set public myminio/noesis-documents;
      echo 'MinIO bucket setup complete';
      "

volumes:
  postgres_data:
  minio_data:

networks:
  noesis-network:
    driver: bridge