# =================================================================
#              .ENV.EXAMPLE - NoesisForge Backend
# =================================================================
# 
# INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Update the values below with your specific configuration
#
# =================================================================

# --------------------------------------------------
# GENERAL APPLICATION CONFIGURATION
# --------------------------------------------------
# Environment: development, production, test
ENVIRONMENT=development
# Application environment for Docker (usually production)
APP_ENV=production
API_BASE_URL=http://localhost:8000

# --------------------------------------------------
# SERVER CONFIGURATION
# --------------------------------------------------
PORT=8000
# Gin mode: debug, release
GIN_MODE=debug

# --------------------------------------------------
# DATABASE CONFIGURATION (PostgreSQL)
# --------------------------------------------------
# Database connection details (individual components)
POSTGRES_DB=noesis_forge
POSTGRES_USER=postgres
POSTGRES_PASSWORD=YOUR_DB_PASSWORD
POSTGRES_HOST=localhost
POSTGRES_HOST_DOCKER=postgres
POSTGRES_PORT=5432
POSTGRES_SSLMODE=disable

# Database connection pool settings
DB_MAX_OPEN_CONNS=100
DB_MAX_IDLE_CONNS=10
DB_CONN_MAX_LIFETIME=1h
# GORM log level: silent, error, warn, info
DB_LOG_LEVEL=error

# --------------------------------------------------
# JWT CONFIGURATION
# --------------------------------------------------
# IMPORTANT: Generate a strong, unique secret for production!
# You can use: openssl rand -base64 64
JWT_SECRET=YOUR_SUPER_SECRET_JWT_KEY_CHANGE_THIS_IN_PRODUCTION
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=168h

# --------------------------------------------------
# MINIO (Object Storage) CONFIGURATION
# --------------------------------------------------
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin123
MINIO_DEFAULT_BUCKETS=noesis-documents
MINIO_ACCESS_KEY_ID=minioadmin
MINIO_SECRET_ACCESS_KEY=minioadmin123
MINIO_ENDPOINT=localhost:9000
MINIO_ENDPOINT_DOCKER=minio:9000
MINIO_USE_SSL=false
MINIO_BUCKET_NAME=noesis-documents
MINIO_REGION=us-east-1

# --------------------------------------------------
# REDIS CACHE CONFIGURATION
# --------------------------------------------------
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=10
REDIS_MIN_IDLE_CONNS=5
REDIS_DIAL_TIMEOUT=5s
REDIS_READ_TIMEOUT=3s
REDIS_WRITE_TIMEOUT=3s

# These configurations will be used when we implement additional features.

# --------------------------------------------------
# RABBITMQ (Message Broker) CONFIGURATION
# --------------------------------------------------
# RABBITMQ_URL=amqp://YOUR_RABBITMQ_USER:YOUR_RABBITMQ_PASSWORD@localhost:5672/
# RABBITMQ_EXCHANGE=noesis-forge
# RABBITMQ_EXCHANGE_TYPE=topic
# RABBITMQ_QUEUE_PREFIX=noesis
# RABBITMQ_DURABLE=true
# RABBITMQ_AUTO_DELETE=false

# --------------------------------------------------
# QDRANT (Vector Database) CONFIGURATION
# --------------------------------------------------
# QDRANT_URL=http://localhost:6333
# QDRANT_API_KEY=YOUR_QDRANT_API_KEY
# QDRANT_COLLECTION_PREFIX=noesis
# QDRANT_VECTOR_SIZE=1024
# QDRANT_DISTANCE=Cosine

# --------------------------------------------------
# OLLAMA (LLM) CONFIGURATION
# --------------------------------------------------
# OLLAMA_URL=http://localhost:11434
# OLLAMA_MODEL=llama3
# OLLAMA_TEMPERATURE=0.7
# OLLAMA_MAX_TOKENS=2048
# OLLAMA_TIMEOUT=120s

# --------------------------------------------------
# EMAIL SERVICE CONFIGURATION
# --------------------------------------------------
# EMAIL_PROVIDER=smtp
# EMAIL_FROM=noreply@yourdomain.com
# EMAIL_FROM_NAME="NoesisForge"
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USERNAME=user@example.com
# SMTP_PASSWORD=YOUR_SMTP_PASSWORD
# SMTP_ENCRYPTION=tls

# --------------------------------------------------
# CORS CONFIGURATION
# --------------------------------------------------
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
# CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
# CORS_ALLOWED_HEADERS=Origin,Content-Type,Accept,Authorization
# CORS_ALLOW_CREDENTIALS=true

# --------------------------------------------------
# METRICS CONFIGURATION
# --------------------------------------------------
# METRICS_ENABLED=true
# METRICS_PORT=9090
# METRICS_PATH=/metrics

# --------------------------------------------------
# LOGGING CONFIGURATION
# --------------------------------------------------
# LOG_LEVEL=info
# LOG_FORMAT=json
# LOG_OUTPUT_PATH=stdout

# --------------------------------------------------
# AUTH POLICY CONFIGURATION
# --------------------------------------------------
# PASSWORD_MIN_LENGTH=8
# PASSWORD_REQUIRE_SPECIAL=true
# PASSWORD_REQUIRE_NUMBER=true
# PASSWORD_REQUIRE_UPPER=true
# PASSWORD_REQUIRE_LOWER=true
# MAX_LOGIN_ATTEMPTS=5
# ACCOUNT_LOCK_DURATION=30m

